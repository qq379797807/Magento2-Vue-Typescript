/*
 * Include core scss
 */
/*
 * Color palette
 */
/*
 * Responsive breakpoints
 */
/*
 * Fonts
 */
/* Body */
/* Heading */
/* H1 */
/* H2 */
/* H3 */
/* H4 */
/* H5 */
/* H6 */
/* Link */
/* Header Links */
/* Footer links */
/* Standard title classes */
/*
 * Buttons
 */
/* Button default states */
/* Button primary */
/* Button primary hover states */
/* Button secondary */
/* Button secondary hover states */
/*
 * Swatches
 */
/*
 * Inputs & Forms
 */
/* [input-text|select|textarea|input-radio|input-checkbox] */
/* Placeholder */
/* Disabled state */
/* Focus state */
/* Input[type="text"] */
/* Input[type="text"] Placeholder */
/* Input[type="text"] Disabled state */
/* Input[type="text"] Focus state */
/* Select */
/* Select Placeholder */
/* Select Disabled state */
/* Select Focus state */
/* Textarea */
/* Textarea Placeholder */
/* Textarea Disabled state */
/* Textarea Focused state */
/* Checkbox / Radio */
/* Limiter */
/* Textarea Disabled state */
/* Textarea Focused state */
/* Sorter */
/* Sorter Disabled state */
/*
 * Header
 */
/*
 * Menu bar
 */
/*
 * Fieldset / Fields
 */
/* Fieldset */
/* Field */
/* Label */
/* Control */
/* Action toolbar */
/* Breadcrumbs */
/* Toolbar */
/*
 * Tabs
 */
/* Detail tabs */
html, body {
  font-family: "Open Sans";
  color: #333;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  html h1, html h2, html h3, html h4, html h5, html h6, body h1, body h2, body h3, body h4, body h5, body h6 {
    font-family: "Open Sans";
    color: #333;
    font-weight: 300;
    text-transform: none; }
  html h1, body h1 {
    font-size: 40px;
    font-weight: 300;
    line-height: 1.1;
    margin: 0rem 0 40px 0;
    color: #333; }
  html h2, body h2 {
    font-size: 2.6rem;
    font-weight: 300;
    line-height: 1.1;
    margin: 2.5rem 0 2rem 0;
    color: #333; }
  html h3, body h3 {
    font-size: 1.8rem;
    font-weight: 300;
    line-height: 1.1;
    margin: 1.5rem 0 1rem 0;
    color: #333; }
  html h4, body h4 {
    font-size: 1.4rem;
    font-weight: 700;
    line-height: 1.1;
    margin: 2rem 0 2rem 0;
    color: #333; }
  html h5, body h5 {
    font-size: 1.2rem;
    font-weight: 700;
    line-height: 1.1;
    margin: 2rem 0 2rem 0;
    color: #333; }
  html h6, body h6 {
    font-size: 1rem;
    font-weight: 700;
    line-height: 1.1;
    margin: 2rem 0 2rem 0;
    color: #333; }
  html p, body p {
    font-size: 1.4rem;
    font-weight: 400;
    color: #333;
    line-height: 18px; }
  html a, body a {
    font-size: 1.4rem;
    font-weight: 400;
    color: #1979c3;
    text-decoration: none; }
    html a:visited, body a:visited {
      font-size: 1.4rem;
      font-weight: 400;
      color: #1979c3;
      text-decoration: none; }
    html a:hover, body a:hover {
      font-weight: 400;
      color: #1979c3;
      text-decoration: underline; }
  html .filter-title, body .filter-title {
    font-size: 18px;
    font-weight: 700;
    margin: 0 0 20px 0;
    color: #333;
    line-height: 1.42162;
    text-transform: none; }
    html .filter-title strong, body .filter-title strong {
      font-size: 18px;
      font-weight: 700;
      margin: 0 0 20px 0;
      color: #333;
      line-height: 1.42162;
      text-transform: none; }
  html .filter-subtitle, body .filter-subtitle {
    font-size: 1.4rem;
    font-weight: 700;
    margin: 0 0 10px 0;
    color: #333;
    line-height: 1.42162;
    text-transform: none; }
  html .filter-options .filter-options-title, body .filter-options .filter-options-title {
    font-size: 1.4rem;
    font-weight: 700;
    margin: 0 0 10px 0;
    color: #333;
    text-transform: none; }
  html .product-item-name > a, body .product-item-name > a {
    color: #333;
    font-size: 1.4rem;
    font-weight: 400;
    line-height: 18px;
    margin: 5px 0px;
    text-transform: none; }
    html .product-item-name > a:visited, body .product-item-name > a:visited {
      color: #333; }

button {
  background: #1979c3;
  border: 1px solid #1979c3;
  border-radius: 3px;
  transition: all 0.34s ease-in-out;
  color: #f2f2f2;
  font-family: "Open Sans";
  font-size: 1.4rem;
  font-weight: 400;
  transition: all 0.34s ease-in-out;
  padding: 7px 15px;
  text-transform: none; }
  button:hover {
    color: white;
    border: 1px solid #1979c3;
    background-color: #ff5501; }
  button.action:hover {
    background: #ff5501;
    border: 1px solid #1979c3;
    color: white; }
  button.action.primary {
    background: #1979c3;
    border: 1px solid #1979c3;
    color: #f2f2f2;
    padding: 7px 15px;
    font-family: "Open Sans";
    font-size: 1.4rem;
    text-transform: none;
    font-weight: 600;
    transition: all 0.34s ease-in-out; }
    button.action.primary:hover {
      background: #ff5501;
      border: 1px solid #1979c3;
      color: white; }
    button.action.primary.tocart {
      font-size: 1.4rem; }
    button.action.primary#product-addtocart-button {
      font-size: 1.4rem; }
  button.action.secondary {
    background: white;
    border: 1px solid blue;
    color: #1979c3;
    font-size: 1.4rem;
    text-transform: none; }
    button.action.secondary:hover {
      background: #dadada;
      border: 1px solid #2a2a2a;
      color: #000; }

.action.primary {
  background: #1979c3;
  border: 1px solid #1979c3;
  color: #f2f2f2;
  font-family: "Open Sans";
  padding: 7px 15px;
  font-size: 1.4rem;
  text-transform: none; }
  .action.primary:hover {
    background: #ff5501;
    border: 1px solid #1979c3;
    color: white; }
  .action.primary.tocart {
    font-size: 1.4rem; }
  .action.primary#product-addtocart-button {
    font-size: 1.4rem; }

.action.secondary {
  background: white;
  border: 1px solid blue;
  color: #1979c3;
  font-family: "Open Sans";
  font-size: 1.4rem; }
  .action.secondary:hover {
    background: #dadada;
    border: 1px solid #2a2a2a;
    color: #000; }

.block.newsletter .action.subscribe {
  height: 36px; }

.block.newsletter .field .control:before {
  line-height: 36px; }

.modes .modes-mode {
  background: #f2f2f2;
  border-top: 1px solid #949494;
  border-left: 1px solid #949494;
  border-bottom: 1px solid #949494;
  color: #949494;
  padding: 7px 10px; }
  .modes .modes-mode:before {
    color: #949494; }
  .modes .modes-mode:last-child {
    border-right: 1px solid #949494; }
    .modes .modes-mode:last-child.active {
      border-right: 1px solid #949494; }
    .modes .modes-mode:last-child:hover {
      border-right: 1px solid #949494; }
  .modes .modes-mode.active {
    background: #f2f2f2;
    border-left: 1px solid #949494;
    border-top: 1px solid #949494;
    border-bottom: 1px solid #949494;
    color: #949494;
    padding: 7px 10px; }
    .modes .modes-mode.active:before {
      color: #949494; }
  .modes .modes-mode:hover {
    background: #dadada;
    border-left: 1px solid #949494;
    border-top: 1px solid #949494;
    border-bottom: 1px solid #949494;
    color: #949494;
    padding: 7px 10px; }
    .modes .modes-mode:hover:before {
      color: #949494; }

.swatch-option {
  background: #f2f2f2;
  border: 1px solid #dadada;
  border-radius: 0px;
  color: #949494;
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 20px;
  text-align: center;
  margin: 0 10px 5px 0;
  padding: 1px 2px;
  height: 20px;
  width: 30px;
  min-width: 30px;
  max-width: 90px;
  overflow: hidden; }
  .swatch-option:hover {
    border: 1px solid white;
    outline: 1px solid #999;
    color: #999; }
  .swatch-option.text {
    background: #f2f2f2;
    border: 1px solid #dadada;
    color: #949494;
    padding: 4px 8px;
    min-width: 22px;
    margin: 0px 7px 5px 0; }
    .swatch-option.text:hover {
      border: 1px solid white;
      outline: 1px solid #999;
      color: #999; }
  .swatch-option.color {
    border: 1px solid #dadada;
    padding: 1px 2px;
    min-width: 30px;
    margin: 0 10px 5px 0; }

.swatch-attribute.size .swatch-option {
  background: #f2f2f2;
  border: 1px solid #dadada;
  border-radius: 0px;
  color: #949494;
  font-size: 1.4rem;
  font-weight: 700;
  line-height: 20px;
  text-align: center;
  margin: 0 10px 5px 0;
  padding: 1px 2px;
  height: 20px;
  width: 30px;
  min-width: 30px;
  max-width: 90px;
  overflow: hidden; }
  .swatch-attribute.size .swatch-option:hover {
    border: 1px solid white;
    outline: 1px solid #999;
    color: #999; }
  .swatch-attribute.size .swatch-option.text {
    background: #f2f2f2;
    border: 1px solid #dadada;
    font-size: 12px;
    color: #949494;
    padding: 4px 8px;
    min-width: 22px;
    margin: 0px 7px 5px 0; }
    .swatch-attribute.size .swatch-option.text:hover {
      border: 1px solid white;
      outline: 1px solid #999;
      color: #999; }

input[type="text"], input[type="radio"], input[type="checkbox"], input[type="email"], input[type="password"], input[type="tel"], input[type="number"], select, textarea {
  background-color: white;
  border: 1px solid #949494;
  border-radius: 3px;
  height: 36px;
  width: 100%;
  margin: 0;
  padding: 5px 10px 4px;
  vertical-align: middle;
  font-size: 1.4rem;
  color: black;
  font-family: "Open Sans";
  font-weight: 400;
  font-style: normal;
  line-height: 36px; }
  input[type="text"]:focus, input[type="radio"]:focus, input[type="checkbox"]:focus, input[type="email"]:focus, input[type="password"]:focus, input[type="tel"]:focus, input[type="number"]:focus, select:focus, textarea:focus {
    background-color: white;
    border: 1px solid #949494;
    color: black;
    font-style: normal; }
  input[type="text"]:disabled, input[type="radio"]:disabled, input[type="checkbox"]:disabled, input[type="email"]:disabled, input[type="password"]:disabled, input[type="tel"]:disabled, input[type="number"]:disabled, select:disabled, textarea:disabled {
    background-color: white;
    border: 1px solid #949494;
    opacity: 0.2;
    color: black;
    font-style: normal; }
  input[type="text"]::placeholder, input[type="radio"]::placeholder, input[type="checkbox"]::placeholder, input[type="email"]::placeholder, input[type="password"]::placeholder, input[type="tel"]::placeholder, input[type="number"]::placeholder, select::placeholder, textarea::placeholder {
    opacity: 1;
    color: #84929F !important;
    font-style: normal; }

input[type="text"] {
  background-color: white;
  border-color: #949494;
  border: 1px solid #949494;
  border-radius: 3px;
  height: 36px;
  width: 100%;
  margin: 0;
  padding: 5px 10px 4px;
  vertical-align: middle;
  font-size: normal;
  color: black;
  font-family: "Open Sans";
  font-weight: 400;
  font-style: normal;
  line-height: 36px; }
  input[type="text"]:focus {
    background-color: white;
    border: 1px solid #949494;
    color: black;
    font-style: normal; }
  input[type="text"]:disabled {
    background-color: white;
    border: 1px solid #949494;
    opacity: 0.2;
    color: black;
    font-style: normal; }
  input[type="text"]::placeholder {
    opacity: 1;
    color: #84929F !important;
    font-style: normal; }

select {
  background-color: white;
  border-color: #949494;
  border: 1px solid #949494;
  border-radius: 3px;
  height: 36px;
  width: 100%;
  margin: 0;
  padding: 5px 10px 4px;
  vertical-align: middle;
  font-size: 1.4rem;
  color: black;
  font-family: "Open Sans";
  font-weight: 400;
  font-style: normal;
  line-height: 36px; }
  select:focus {
    background-color: white;
    border: 1px solid #949494;
    color: black;
    font-style: normal; }
  select:disabled {
    background-color: white;
    border: 1px solid #949494;
    opacity: 0.2;
    color: black;
    font-style: normal; }
  select::placeholder {
    opacity: 1;
    color: #84929F !important;
    font-style: normal; }

textarea {
  resize: vertical;
  background-color: white;
  border-color: #949494;
  border: 1px solid #949494;
  border-radius: 3px;
  height: auto;
  min-height: 36px;
  width: 100%;
  margin: 0;
  padding: 5px 10px 4px;
  vertical-align: middle;
  font-size: 1.4rem;
  color: black;
  font-family: "Open Sans";
  font-weight: 400;
  font-style: normal;
  line-height: 36px; }
  textarea:focus {
    background-color: white;
    border: 1px solid #949494;
    color: black;
    font-style: normal; }
  textarea:disabled {
    background-color: white;
    border: 1px solid #949494;
    opacity: 0.2;
    color: black;
    font-style: normal; }
  textarea::placeholder {
    opacity: 1;
    color: #84929F !important;
    font-style: normal; }

input[type="checkbox"] {
  width: auto; }

.limiter-options {
  background-color: white;
  border: 1px solid #949494;
  border-radius: 3px;
  height: 32px;
  width: auto;
  margin: 0 5px 0 7px;
  padding: 5px 10px 4px;
  vertical-align: middle;
  font-size: 1.4rem;
  color: #333;
  font-family: "Open Sans";
  font-weight: 400;
  font-style: normal;
  line-height: 1.42; }
  .limiter-options:focus {
    background-color: white;
    border: 1px solid #949494;
    color: black;
    font-style: normal; }
  .limiter-options:disabled {
    background-color: white;
    border: 1px solid #949494;
    opacity: 0.2;
    color: black;
    font-style: normal; }

.sorter .sorter-options {
  background-color: white;
  border: 1px solid #949494;
  border-radius: 3px;
  height: 32px;
  width: auto;
  margin: 0 0 0 7px;
  padding: 5px 10px 4px;
  vertical-align: middle;
  font-size: 1.4rem;
  color: #333;
  font-family: "Open Sans";
  font-weight: 400;
  font-style: normal;
  line-height: 1.42; }

.sorter .sorter-action:before {
  line-height: 1.42; }

/****
** Sidebar input
****/
.sidebar input[type="text"], .sidebar input[type="password"], .sidebar input[type="url"], .sidebar input[type="tel"], .sidebar input[type="search"], .sidebar input[type="number"], .sidebar input[type="datetime"], .sidebar input[type="email"], .sidebar select {
  border: 1px solid #949494;
  border-radius: 3px;
  padding: 5px 10px 4px;
  line-height: 36px;
  font-size: 1.4rem;
  font-weight: 400;
  color: #2e2e2e;
  height: 45px; }

/* Search input icon */
.block-search .action.search {
  height: 36px; }

.fieldset {
  border: 0;
  margin: 0;
  padding: 0; }
  .fieldset > legend.legend {
    color: #333;
    font-size: 24px;
    font-family: "Open Sans";
    font-weight: 600;
    font-style: normal;
    line-height: 1.2;
    margin: 20px 0;
    padding: 0;
    width: inherit; }
  .fieldset > div.field {
    margin: 0 0 20px;
    box-sizing: border-box; }
    .fieldset > div.field:not(.choice) > label.label {
      padding: 6px 15px 0 0;
      text-align: left;
      width: auto;
      float: none;
      font-weight: 600; }
    .fieldset > div.field:not(.choice) > legend.label {
      padding: 6px 15px 0 0;
      text-align: left;
      width: auto;
      float: none;
      font-weight: 600; }
    .fieldset > div.field:not(.choice) > div.control {
      width: auto;
      float: none; }
    .fieldset > div.field.choice:before {
      width: auto;
      padding: 0;
      height: inherit;
      float: none; }
    .fieldset > div.field.choice label.label {
      margin: 0 0 0 5px; }

/****
** Form
****/
form div.actions-toolbar {
  margin: 20px 0; }

/****
** Sidebar input
****/
.sidebar input[type="text"], .sidebar input[type="password"], .sidebar input[type="url"], .sidebar input[type="tel"], .sidebar input[type="search"], .sidebar input[type="number"], .sidebar input[type="datetime"], .sidebar input[type="email"], .sidebar select {
  border: 1px solid #949494;
  border-radius: 3px;
  padding: 5px 10px 4px;
  line-height: 36px;
  font-size: 1.4rem;
  font-weight: 400;
  color: #2e2e2e;
  height: 45px; }

.nav-sections {
  background: #f2f2f2;
  margin: 0 0 25px; }
  .nav-sections .navigation {
    background: #f2f2f2; }
    .nav-sections .navigation .ui-menu-item.level-top a {
      font-size: 1.4rem;
      font-weight: 700;
      font-family: "Open Sans";
      color: #949494; }
      .nav-sections .navigation .ui-menu-item.level-top a:hover {
        color: #333;
        background: #f2f2f2; }
    .nav-sections .navigation .ui-menu-item.level-top.has-active > a {
      color: #333;
      background: #f2f2f2;
      border-top: none;
      border-bottom: 3px solid #ff5501;
      border-left: none;
      border-right: none; }
      .nav-sections .navigation .ui-menu-item.level-top.has-active > a:hover {
        color: #333;
        background: #f2f2f2; }
    .nav-sections .navigation .level0 .submenu {
      background: #ffffff; }
      .nav-sections .navigation .level0 .submenu li a {
        color: #333;
        font-weight: 400;
        border-color: #ff5501; }
      .nav-sections .navigation .level0 .submenu li:hover {
        background: #eaeaea; }
        .nav-sections .navigation .level0 .submenu li:hover a {
          color: #333;
          font-weight: 400; }

.breadcrumbs .items .item {
  font-size: 1.4rem;
  line-height: 18px;
  padding: 5px 5px 0 0;
  color: #333;
  font-weight: 400; }
  .breadcrumbs .items .item a {
    font-size: 1.4rem;
    line-height: 18px;
    padding: 5px 5px 0 0;
    color: #333;
    font-weight: 400; }
  .breadcrumbs .items .item strong {
    font-weight: 400;
    color: #949494; }
  .breadcrumbs .items .item:after {
    color: #949494;
    line-height: 18px; }

.page-header {
  background: #fff;
  color: #333; }
  .page-header .panel.wrapper {
    border-color: #e8e8e8;
    background: #fff; }
  .page-header .header a {
    color: #1979c3;
    text-decoration: none;
    font-weight: 400; }
    .page-header .header a:hover {
      color: #1979c3;
      font-weight: 400;
      text-decoration: underline; }
  .page-header .header.content {
    background: #fff;
    color: #333;
    padding: 30px 20px 0; }
  .page-header .header.panel {
    background: #fff;
    color: #333;
    padding: 10px 20px; }
  .page-header .header .links li a {
    color: #1979c3;
    text-decoration: none;
    font-weight: 400; }
    .page-header .header .links li a:hover {
      color: #1979c3;
      font-weight: 400;
      text-decoration: underline; }

.product-info-main .price-box .price-wrapper span.price {
  font-size: 1.4rem;
  font-weight: 400;
  line-height: 18px;
  color: #333; }

.product.data.items .item.title > .switch {
  background: black;
  color: white;
  border-color: gray;
  font-weight: 300;
  text-decoration: none;
  padding: 5px 25px;
  font-size: 1.5rem; }

.product.data.items .item.title:not(.disabled) > .switch:hover:hover {
  background: orange;
  color: white;
  border-color: red; }

.product.data.items .item.title.active > .switch {
  background: orange;
  color: white;
  border-color: red; }

.page-footer {
  background: #ffffff; }
  .page-footer .footer a {
    color: #1979c3;
    text-decoration: none;
    font-weight: 400; }
    .page-footer .footer a:hover {
      color: #1979c3;
      font-weight: 400;
      text-decoration: underline; }
  .page-footer .footer.content {
    margin: 25px auto;
    padding: 25px 20px 0;
    color: #333;
    border-color: #333; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
